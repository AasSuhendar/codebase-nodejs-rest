#!/usr/bin/env node

/**
 * Module dependencies.
 */

const cluster = require('cluster')
const numCPUs = require('os').cpus().length

const app = require('../app')
const config = require('../config')

const log = require('../helpers/utils/utils-logger')

/**
 * Normalize a port into a number, string, or false.
 */

function normalizePort(val) {
  let port = parseInt(val, 10)

  if (isNaN(port)) {
    return val
  }

  if (port >= 0) {
    return port
  }

  return false
}

/**
 * Get address and port from environment and store in Express.
 */

const address = config.schema.get('server.address')
const port = normalizePort(config.schema.get('server.port'))

/**
 * Listen on provided port, on all network interfaces.
 */

if (cluster.isMaster) {
  log.send('http-server').info('Server Master Started at PID ' + process.pid)
  for (let i = 0; i < numCPUs; i++) {
    cluster.fork()
  }
} else {
  log.send('http-server').info('Server Worker Started at PID ' + process.pid + ' Listening on ' + address + ':' + port)
  app.listen(port, address)
}
